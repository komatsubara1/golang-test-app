// Package api Code generated by swaggo/swag. DO NOT EDIT
package api

import "github.com/swaggo/swag"

const docTemplate = `{
    "schemes": {{ marshal .Schemes }},
    "swagger": "2.0",
    "info": {
        "description": "{{escape .Description}}",
        "title": "{{.Title}}",
        "contact": {},
        "license": {
            "name": "komatsubara.s"
        },
        "version": "{{.Version}}"
    },
    "host": "{{.Host}}",
    "basePath": "{{.BasePath}}",
    "paths": {
        "/item/gain": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "アイテムを売却",
                "parameters": [
                    {
                        "description": "アイテム売却リクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ItemSellRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ItemSellResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item/get": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "対象のユーザー所持アイテム情報を取得",
                "parameters": [
                    {
                        "description": "アイテム取得リクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ItemGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ItemGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/item/get_all": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "Item"
                ],
                "summary": "ユーザー所持アイテム情報を取得",
                "parameters": [
                    {
                        "description": "アイテム取得リクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.ItemGetAllRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.ItemGetAllResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/create": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーを作成",
                "parameters": [
                    {
                        "description": "ユーザー作成リクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserCreateRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserCreateResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/get": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーを取得",
                "parameters": [
                    {
                        "description": "ユーザー取得リクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserGetRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserGetResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        },
        "/user/login": {
            "post": {
                "consumes": [
                    "application/json"
                ],
                "produces": [
                    "application/json"
                ],
                "tags": [
                    "User"
                ],
                "summary": "ユーザーログイン",
                "parameters": [
                    {
                        "description": "ユーザーログインリクエスト",
                        "name": "title",
                        "in": "body",
                        "required": true,
                        "schema": {
                            "$ref": "#/definitions/request.UserLoginRequest"
                        }
                    }
                ],
                "responses": {
                    "200": {
                        "description": "OK",
                        "schema": {
                            "$ref": "#/definitions/response.UserLoginResponse"
                        }
                    },
                    "400": {
                        "description": "Bad Request",
                        "schema": {
                            "$ref": "#/definitions/response.ErrorResponse"
                        }
                    }
                }
            }
        }
    },
    "definitions": {
        "error.ErrorCode": {
            "type": "integer",
            "enum": [
                0,
                1
            ],
            "x-enum-varnames": [
                "ErrorCodeNone",
                "ErrorCodeUserNotFound"
            ]
        },
        "master.ItemId": {
            "type": "object",
            "properties": {
                "item_id": {}
            }
        },
        "request.ItemGainRequest": {
            "type": "object",
            "required": [
                "count",
                "item_id"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "item_id": {
                    "type": "integer",
                    "minimum": 1
                }
            }
        },
        "request.ItemGetAllRequest": {
            "type": "object",
            "properties": {
                "exclusion_zero_quantity": {
                    "type": "boolean",
                    "default": false
                }
            }
        },
        "request.ItemGetRequest": {
            "type": "object",
            "required": [
                "item_id",
                "user_id"
            ],
            "properties": {
                "item_id": {
                    "$ref": "#/definitions/master.ItemId"
                },
                "user_id": {
                    "$ref": "#/definitions/user.UserId"
                }
            }
        },
        "request.ItemSellRequest": {
            "type": "object",
            "required": [
                "count",
                "item_id",
                "user_id"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "item_id": {
                    "$ref": "#/definitions/master.ItemId"
                },
                "user_id": {
                    "$ref": "#/definitions/user.UserId"
                }
            }
        },
        "request.ItemUseRequest": {
            "type": "object",
            "required": [
                "count",
                "item_id",
                "user_id"
            ],
            "properties": {
                "count": {
                    "type": "integer",
                    "minimum": 1
                },
                "item_id": {
                    "$ref": "#/definitions/master.ItemId"
                },
                "user_id": {
                    "$ref": "#/definitions/user.UserId"
                }
            }
        },
        "request.UserCreateRequest": {
            "type": "object",
            "required": [
                "user_name"
            ],
            "properties": {
                "user_name": {
                    "type": "string"
                }
            }
        },
        "request.UserGetRequest": {
            "type": "object"
        },
        "request.UserLoginRequest": {
            "type": "object",
            "required": [
                "user_id"
            ],
            "properties": {
                "user_id": {
                    "$ref": "#/definitions/user.UserId"
                }
            }
        },
        "response.CommonResponse": {
            "type": "object",
            "required": [
                "code",
                "message"
            ],
            "properties": {
                "code": {
                    "type": "integer"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "response.ErrorResponse": {
            "type": "object",
            "properties": {
                "common": {
                    "$ref": "#/definitions/response.CommonResponse"
                }
            }
        },
        "response.ItemGainResponse": {
            "type": "object",
            "required": [
                "code",
                "item",
                "message"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "item": {
                    "$ref": "#/definitions/user.UserItem"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "response.ItemGetAllResponse": {
            "type": "object",
            "required": [
                "code",
                "items",
                "message"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "items": {
                    "type": "array",
                    "items": {
                        "$ref": "#/definitions/user.UserItem"
                    }
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                }
            }
        },
        "response.ItemGetResponse": {
            "type": "object",
            "required": [
                "item"
            ],
            "properties": {
                "common": {
                    "$ref": "#/definitions/response.CommonResponse"
                },
                "item": {
                    "$ref": "#/definitions/user.UserItem"
                }
            }
        },
        "response.ItemSellResponse": {
            "type": "object",
            "required": [
                "code",
                "item",
                "message",
                "user"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "item": {
                    "$ref": "#/definitions/user.UserItem"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "response.ItemUseResponse": {
            "type": "object",
            "required": [
                "code",
                "item",
                "message",
                "user"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "item": {
                    "$ref": "#/definitions/user.UserItem"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "response.UserCreateResponse": {
            "type": "object",
            "required": [
                "code",
                "message",
                "user"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "response.UserGetResponse": {
            "type": "object",
            "required": [
                "code",
                "message",
                "user"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "response.UserLoginResponse": {
            "type": "object",
            "required": [
                "code",
                "message",
                "user"
            ],
            "properties": {
                "code": {
                    "$ref": "#/definitions/error.ErrorCode"
                },
                "message": {
                    "type": "string",
                    "minLength": 1
                },
                "user": {
                    "$ref": "#/definitions/user.User"
                }
            }
        },
        "user.User": {
            "type": "object",
            "properties": {
                "coin": {
                    "type": "integer"
                },
                "id": {
                    "$ref": "#/definitions/user.UserId"
                },
                "latest_logged_in_at": {
                    "type": "string"
                },
                "name": {
                    "type": "string"
                },
                "stamina": {
                    "type": "integer"
                },
                "stamina_latest_updated_at": {
                    "type": "string"
                }
            }
        },
        "user.UserId": {
            "type": "object",
            "properties": {
                "value.ValueObject[uuid.UUID]": {}
            }
        },
        "user.UserItem": {
            "type": "object",
            "properties": {
                "item_id": {
                    "$ref": "#/definitions/master.ItemId"
                },
                "quantity": {
                    "type": "integer"
                },
                "user_id": {
                    "$ref": "#/definitions/user.UserId"
                }
            }
        }
    }
}`

// SwaggerInfo holds exported Swagger Info so clients can modify it
var SwaggerInfo = &swag.Spec{
	Version:          "1.0",
	Host:             "",
	BasePath:         "",
	Schemes:          []string{},
	Title:            "test-app",
	Description:      "Golangサンプルプロジェクト",
	InfoInstanceName: "swagger",
	SwaggerTemplate:  docTemplate,
	LeftDelim:        "{{",
	RightDelim:       "}}",
}

func init() {
	swag.Register(SwaggerInfo.InstanceName(), SwaggerInfo)
}
