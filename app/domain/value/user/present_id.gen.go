// Code generated by cli/generator/vo/gen.go; DO NOT EDIT.

package user

import (
	"app/domain/value"
	"encoding/json"
	"fmt"
	"github.com/google/uuid"
)

type PresentId struct {
	value.ValueObject[uuid.UUID]
}

func NewPresentId(v uuid.UUID) PresentId {
	return PresentId{value.NewValueObject[uuid.UUID](v)}
}

func (v *PresentId) Scan(value interface{}) error {
	switch vt := value.(type) {
	case uuid.UUID:
		*v = NewPresentId(vt)
	case string:
		uuid, err := uuid.Parse(vt)
		if err != nil {
			return err
		}
		*v = NewPresentId(uuid)
	case []uint8:
		uuid, err := uuid.ParseBytes(vt)
		if err != nil {
			return err
		}
		*v = NewPresentId(uuid)
	default:
		return fmt.Errorf("invalid type. type=%s", vt)
	}
	return nil
}

func (v *PresentId) UnmarshalJSON(data []byte) error {
	var t any
	if err := json.Unmarshal(data, &t); err != nil {
		return err
	}

	v.Scan(t)
	return nil
}
